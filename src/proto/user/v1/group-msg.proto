// protoc --go_out=plugins=grpc:. *.proto
// protoc -I src/proto/user/v1/ --go_out=plugins=grpc:. src/proto/user/v1/*.proto
syntax = "proto3";
package pb_user_v1;


// GroupResponse 用户组响应
message GroupResponse {
  int64 code = 1;
}

// GroupID 用户组ID
message GroupID {
  int64 id = 1;
}

// quota 配额信息
message Quota {
  int64  is_share = 1;
  string resources_group_id = 2;
  int64  gpu = 3;
  int64  cpu = 4;
  int64  memory = 5;
}

// group 组信息
message GroupWithQuota {
  int64 id = 1;
  string name = 2;
  int64 parent_id = 3;
  int64 top_parent_id = 4;
  int64 disk_quota_size = 5;
  string description = 6;
  repeated Quota quotas = 7;
}

// GroupAddRequest 用户组添加请求
message GroupAddRequest {
  string name = 1;
  int64  parent_id = 2;
  int64  disk_quota_size = 3;
  string description = 4;
  repeated Quota quotas = 5;
}

// GroupQueryByConditionRequest 按条件查询组信息请求
message GroupQueryWithQuotaByConditionRequest {
  repeated int64 id = 1;
  repeated string name = 2;
  repeated int64 parent_id = 3;
}

// GroupQueryByConditionResponse 按条件查询组信息响应
message GroupQueryWithQuotaByConditionResponse {
  repeated GroupWithQuota groups = 1;
}

// GroupUpdateRequest 组信息更新请求
message GroupUpdateRequest {
  int64 id = 1;
  string name = 2;
  int64 parent_id = 3;
  bool use_parent_id = 4;
  string description = 5;
  repeated Quota quotas = 6;
  int64  disk_quota_size = 7;
}

// QuotaUpdateRequest 配额信息更新请求
message QuotaUpdateRequest {
  int64 group_id = 1;
  int64 is_share = 2;
  string resources_id = 3;
  int64 quota_type = 4;
  int64 total = 5;
  int64 used = 6;
}

// SetGroupQuotaRequest 配额信息更新请求
message SetGroupQuotaUsedRequest {
  int64 group_id = 1;
  int64 is_share = 2;
  int64 quota_type = 3;
  int64 used = 4;
}

// GroupTreeResponse 组树查询响应
message GroupTreeResponse {
  bytes tree_json = 1;
}

// GroupIDsResponse 组ID
message GroupIDsResponse {
  repeated int64 ids = 1;
}

// QuotaRecord 配额表记录
message QuotaRecord {
  int64 is_share = 1;
  string resource_id = 2;
  int64 type = 3;
  int64 group_id = 4;
  int64 total = 5;
  int64 used = 6;
}

// QueryQuotaByCondition 通过条件查询配额
message QueryQuotaByCondition {
  int64 group_id = 1;
  int64 type = 2;
  string resource_id = 3;
  int64 is_share = 4;
}

message QueryQuotaByConditionResponse {
  repeated QuotaRecord records = 1;
}